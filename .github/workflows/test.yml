name: Run tests

on:
  push:
    branches:
      - next
  pull_request:
    branches:
      - next

jobs:
  prepare_dependencies:
    name: Prepare dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Get cached dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn --network-concurrency 1 --frozen-lockfile

  lint:
    name: Lint
    needs: prepare_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Get cached dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run linter
        run: yarn lint

  validate_core:
    name: Validate core
    needs: prepare_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Get cached dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Build core
        run: yarn build:core

      - name: Test core
        run: yarn test:core --coverage

      - name: Test CLI
        run: yarn test:cli --coverage

      - name: Post core coverage data
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: packages/core/coverage/lcov.info
          flag-name: core

      - name: Post CLI coverage data
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: packages/core/cli/coverage/lcov.info
          flag-name: core-cli

  unit_test_integrations:
    name: Run unit tests on ${{ matrix.integration }}
    needs: validate_core
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        integration:
          - boilerplate
          - commercetools

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Get cached dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Build core
        run: yarn build:core

      - name: Build middleware
        run: yarn build:middleware

      - name: Build api-client
        run: cd packages/${{ matrix.integration }}/api-client && yarn build

      - name: Test api-client
        run: cd packages/${{ matrix.integration }}/api-client && yarn test --passWithNoTests --coverage

      - name: Build composables
        run: cd packages/${{ matrix.integration }}/composables && yarn build

      - name: Test composables
        run: cd packages/${{ matrix.integration }}/composables && yarn test --passWithNoTests --coverage

      - name: Build theme
        run: cd packages/${{ matrix.integration }}/theme && yarn build

      - name: Test theme
        run: cd packages/${{ matrix.integration }}/theme && yarn test --passWithNoTests

      - name: api-client coverage file
        id: api-coverage
        run: echo "::set-output name=exists::$((test -s packages/${{ matrix.integration }}/api-client/coverage/lcov.info && echo 'true') || echo 'false')"

      - name: composables coverage file
        id: composables-coverage
        run: echo "::set-output name=exists::$((test -s packages/${{ matrix.integration }}/composables/coverage/lcov.info && echo 'true') || echo 'false')"

      - name: Post api-client coverage data
        if: steps.api-coverage.outputs.exists == 'true'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: packages/${{ matrix.integration }}/api-client/coverage/lcov.info
          parallel: true
          flag-name: ${{ matrix.integration }}-api-client

      - name: Post composables coverage data
        if: steps.composables-coverage.outputs.exists == 'true'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: packages/${{ matrix.integration }}/composables/coverage/lcov.info
          parallel: true
          flag-name: ${{ matrix.integration }}-composables

  finish_coveralls:
    name: Finish coveralls
    needs: unit_test_integrations
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true

  e2e_test_integrations:
    name: Run E2E tests on ${{ matrix.integration }}
    env:
      NUXT_ENV_E2E: true
    needs: validate_core
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        integration:
          # - bp
          - ct

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Get cached dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Build integration
        run: yarn build:${{ matrix.integration }}

      - name: Cypress run
        uses: cypress-io/github-action@v2.8.2
        with:
          start: yarn start:${{ matrix.integration }}
          wait-on: 'http://localhost:3000/'
          command: yarn run test:e2e:headless
          config-file: packages/core/nuxt-theme-module/theme/tests/e2e/cypress.json
          browser: chrome
          headless: true
          install: false